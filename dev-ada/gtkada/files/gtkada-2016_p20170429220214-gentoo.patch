diff --git a/Makefile.in b/Makefile.in
index d03c7432..707f0fa2 100644
--- a/Makefile.in
+++ b/Makefile.in
@@ -1,3 +1,5 @@
+.NOTPARALLEL:
+
 SHELL=/bin/sh
 
 .SUFFIXES:
@@ -14,22 +16,26 @@ GPRBUILD_OPTIONS=
 GPRINSTALL_OPTIONS=
 
 TARGET=@TARGET@
+GPRBUILD=@GPRBUILD@
+GPRINSTALL=@GPRINSTALL@
 ifeq ($(TARGET),)
-GPRBUILD=@GPRBUILD@ $(GPRBUILD_OPTIONS)
-GPRINSTALL=@GPRINSTALL@ $(GPRINSTALL_OPTIONS)
+GPRBUILD2=${GPRBUILD} $(GPRBUILD_OPTIONS)
+GPRINSTALL2=${GPRINSTALL} $(GPRINSTALL_OPTIONS)
 else
-GPRBUILD=@GPRBUILD@ --target=${TARGET} $(GPRBUILD_OPTIONS)
-GPRINSTALL=@GPRINSTALL@ --target=${TARGET} $(GPRINSTALL_OPTIONS)
+GPRBUILD2=${GPRBUILD} --target=${TARGET} $(GPRBUILD_OPTIONS)
+GPRINSTALL2=${GPRINSTALL} --target=${TARGET} $(GPRINSTALL_OPTIONS)
 endif
 
 # Number of parallel compilation
 PROCESSORS   = 0
 
 # Location (under $prefix) where the project files should be copied
-PRJDIR=lib/gnat
+PRJDIR=share/gpr
+
+LIBDIR=lib
 
-GPRBUILD_FULL = ${GPRBUILD} -j${PROCESSORS} -m -p ${GPRBUILD_SWITCHES}
-GPRINSTALL_FULL = ${GPRINSTALL} -p -f --project-subdir=$(PRJDIR) \
+GPRBUILD_FULL = ${GPRBUILD2} -j${PROCESSORS} -m -p -v -R ${GPRBUILD_SWITCHES}
+GPRINSTALL_FULL = ${GPRINSTALL2} -p -f -v --project-subdir=$(PRJDIR) \
 	--build-var=LIBRARY_TYPE --install-name=gtkada --prefix=${DESTDIR}$(prefix) \
 	-XGTK_PREFIX=${prefix}
 
@@ -100,34 +106,36 @@ tests: testgtk/opengl/view_gl.adb
 install/%: force
 	${GPRINSTALL_FULL} -XLIBRARY_TYPE=$(@F) --build-name=$(@F) \
 		--sources-subdir=include/gtkada/gtkada.$(@F) \
-		--lib-subdir=lib/gtkada/gtkada.$(@F) \
+		--lib-subdir=${LIBDIR}/gtkada/gtkada.$(@F) \
+		--link-lib-subdir=${LIBDIR} \
 		-Psrc/gtkada.gpr
 ifeq (${HAVE_OPENGL}, True)
 	${GPRINSTALL_FULL} -XLIBRARY_TYPE=$(@F) --build-name=$(@F) \
 		--sources-subdir=include/gtkada/gtkada_gl.$(@F) \
-		--lib-subdir=lib/gtkada/gtkada_gl.$(@F) \
+		--lib-subdir=${LIBDIR}/gtkada/gtkada_gl.$(@F) \
+		--link-lib-subdir=${LIBDIR} \
 		-Psrc/opengl/gtkada_gl.gpr
 endif
 
 install-clean:
-ifneq (,$(wildcard $(prefix)/lib/gnat/manifests/gtkada))
+ifneq (,$(wildcard $(prefix)/${LIBDIR}/gnat/manifests/gtkada))
 	-$(GPRINSTALL) --uninstall -f --prefix=$(prefix) \
-		--project-subdir=lib/gnat gtkada
+		--project-subdir=${LIBDIR}/gnat gtkada
 endif
 
 install: install-clean
 	${GPRINSTALL_FULL} -XLIBRARY_TYPE=$(LIBRARY_TYPE_FOR_TOOLS) \
 		--mode=usage -Psrc/tools/tools.gpr
-	cd testgtk; ${GPRINSTALL_FULL} -XLIBRARY_TYPE=$(LIBRARY_TYPE_FOR_TOOLS) \
-		--mode=usage --exec-subdir=${DESTDIR}${exampledir} \
-		-Ptestgtk.gpr -aP ../src
+#	cd testgtk; ${GPRINSTALL_FULL} -XLIBRARY_TYPE=$(LIBRARY_TYPE_FOR_TOOLS) \
+#		--mode=usage --exec-subdir=${DESTDIR}${exampledir} \
+#		-Ptestgtk.gpr -aP ../src
 
 	@echo '-----------------------------------------------------------------------'
 	@echo '--  GtkAda has now been installed.                                   --'
 	@echo '--  To use the library, you may need to update LD_LIBRARY_PATH       --'
 	@echo '--  or to run ldconfig. You may also need to update GPR_PROJECT_PATH --'
 	@echo '--  to include                                                       --'
-	@echo '--  ${prefix}/lib/gnat'
+	@echo '--  ${prefix}/share/gpr'
 	@echo '-----------------------------------------------------------------------'
 
 docs:
diff --git a/shared.gpr.in b/shared.gpr.in
index ba14efeb..84486dbc 100644
--- a/shared.gpr.in
+++ b/shared.gpr.in
@@ -45,7 +45,11 @@ project Shared is
    Gtk_Libs    := Gtk.Gtk_Default_Libs    & (@GTK_LIBS_GPR@);
    GL_Include  := Gtk.GL_Default_Include  & (@GL_CFLAGS_GPR@);
    GL_Libs     := Gtk.GL_Default_Libs     & (@GL_LIBS_GPR@);
-
+   
+   C_Flags := Split (external ("CFLAGS", ""), " ");
+   Objc_Flags := Split (external ("OBJCFLAGS", ""), " ");
+   Ada_Flags := Split (external ("ADAFLAGS", ""), " ");
+   
    package Naming is
       for Body_Suffix ("Objective-C") use ".m";
    end Naming;
@@ -68,8 +72,9 @@ project Shared is
              for Switches ("C") use ("-O2");
       end case;
 
-      for Switches ("C") use Compiler'Switches ("C") & Gtk_Include;
-      for Switches ("Objective-C") use Compiler'Switches ("Objective-C") & Gtk_Include;
+      for Switches ("C") use Compiler'Switches ("C") & C_Flags & Gtk_Include;
+      for Switches ("Objective-C") use Compiler'Switches ("Objective-C") & Objc_Flags & Gtk_Include;
+      for Switches ("Ada") use Compiler'Switches ("Ada") & Ada_Flags & Gtk_Include;
    end Compiler;
 
    package Builder is
